#!/usr/bin/env python3
# -*- coding: utf-8 -*-

# Есть значение радиуса круга
radius = 102

# Выведите на консоль значение прощади этого круга с точностю до 4-х знаков после запятой
# подсказки:
#       формулу можно подсмотреть в интернете,
#       пи возьмите равным 3.1415926
#       точность указывается в функции round()
# TODO здесь ваш код
# S=PR**2
P=3.1415926
area_of_a_circle = P*radius**2
print ('area_of_a_circle =', round (area_of_a_circle, 4))

# Далее, пусть есть координаты точки
point = (23, 34)
# где 23 - координата х, 34 - координата у

# Если точка point лежит внутри того самого круга (radius = 42), то выведите на консоль True,
# Или False, если точка лежит вовне круга.
# подсказки:
#       нужно определить расстояние от этой точки до начала координат (0, 0)
#       формула так же есть в интернете
#       квадратный корень - это возведение в степень 0.5
#       операции сравнения дают булевы константы True и False
# TODO здесь ваш код

#Чтоб выяснить, попадает ли точка с заданными координатими внутрь окружности, или нет, необходимо найти координаты
# точки центра окружности и проверить на сколько удалена точка по заданным координатам от точки центра окружности. Если 
# эти точки расположены друг от друга на растояние меньше чем радиус окружности то точка лежит в окружности иначе не 
# лежит. 
# Растояние между точками выясним по теореме пифагора.

distance_of_point_1 = ((radius-point[0])**2+(radius-point[1])**2)**.5
print ('distance_of_point_1', round(distance_of_point_1,3))
print (distance_of_point_1<radius)
# Аналогично для другой точки
point_2 = (30, 30)
distance_of_point_2 = ((radius-point_2[0])**2+(radius-point_2[1])**2)**.5
print ('distance_of_point_2', round (distance_of_point_2, 3))
print (distance_of_point_2<radius)
# Если точка point_2 лежит внутри круга (radius = 42), то выведите на консоль True,
# Или False, если точка лежит вовне круга.
# TODO здесь ваш код

# Пример вывода на консоль:
#
# 77777.7777
# False
# False



